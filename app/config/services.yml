# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value
    my_user_provider.class: adminBundle\Security\Provider\FOSUBUserProvider

services:
    Listener.listener.login:
        class: adminBundle\Listener\LoginListener
        arguments:
            -  "@router"
            -  "@security.token_storage"
            -  "@event_dispatcher"
            -  "@logger"
        scope: request
        tags:
            - { name: kernel.event_listener, event: security.interactive_login, method: onSecurityInteractiveLogin }
    #App.Handler.SessionIdle:
        #class: adminBundle\Listener\SessionIdleHandler
        #arguments: ['%session_max_idle_time%']
        #tags: [{ name: kernel.event_listener, event: kernel.request }]
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    app.form.registration:
        class: adminBundle\Form\RegistrationType
        tags:
            - { name: form.type, alias: app_user_registration }

    my_user_provider:
        class: "%my_user_provider.class%"
        #this is the place where the properties are passed to the UserProvider - see config.yml
        arguments: ['@fos_user.user_manager',{facebook: facebook_id,google: google_id}]



